I"†<p>å­—ç¬¦ä¸²è¿žæŽ¥ç¬¦</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="n">_RandomAccessIterator</span><span class="o">&gt;</span>
<span class="kt">void</span> <span class="nf">__reverse</span><span class="p">(</span><span class="n">_RandomAccessIterator</span> <span class="n">__first</span><span class="p">,</span> <span class="n">_RandomAccessIterator</span> <span class="n">__last</span><span class="p">,</span> <span class="n">random_access_iterator_tag</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">if</span> <span class="p">(</span><span class="n">__first</span> <span class="o">==</span> <span class="n">__last</span><span class="p">)</span>
		<span class="k">return</span><span class="p">;</span>
	<span class="o">-</span><span class="err">\â€“</span><span class="n">__last</span><span class="p">;</span>
	<span class="k">while</span> <span class="p">(</span><span class="n">__first</span> <span class="o">&lt;</span> <span class="n">__last</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">std</span><span class="o">::</span><span class="n">iter_swap</span><span class="p">(</span><span class="n">__first</span><span class="p">,</span> <span class="n">__last</span><span class="p">);</span>
		<span class="o">++</span><span class="n">__first</span><span class="p">;</span>
		<span class="o">-</span><span class="err">\</span><span class="o">-</span><span class="n">__last</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span></code></pre></figure>
:ET