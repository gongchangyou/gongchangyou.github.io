<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mouse的博客</title>
		<description>记录学习生活工作的点滴</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>slf4j</title>
				<description>&lt;h1 id=&quot;slf4j--logback&quot;&gt;slf4j &amp;amp; logback&lt;/h1&gt;

&lt;p&gt;slf4j是基于门面模式的日志模块，logback是其中的一个实现，另个常用的是log4j&lt;/p&gt;

&lt;p&gt;去年log4j 的漏洞整怕了，还是用logback实现吧。&lt;/p&gt;

&lt;p&gt;有几个常用的slf4j和logback相关模块&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;logback-classic 日志的实现 ，内置logback-core&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;logback-access &lt;a href=&quot;https://logback.qos.ch/access.html#configuration&quot;&gt;https://logback.qos.ch/access.html#configuration&lt;/a&gt; 可以在 &lt;em&gt;$TOMCAT_HOME/conf/server.xml&lt;/em&gt; 中添加&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Connector port=&quot;8050&quot; 
  handler.list=&quot;mx&quot;
  mx.enabled=&quot;true&quot; 
  mx.httpHost=&quot;localhost&quot; 
  mx.httpPort=&quot;8082&quot; 
  protocol=&quot;AJP/1.3&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;访问模块与 Servlet 容器集成提供通过 Http 来访问日记的功能。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;logstash-logback-encoder 以json格式来保存日志&lt;/li&gt;
  &lt;li&gt;lombok 可以使用@Slf4j注解，避免每个类中都写LoggerFactory&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Logback-spring.xml&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;debug=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 控制台输出 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;conversionRule&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;conversionWord=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clr&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;converterClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.boot.logging.logback.ColorConverter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;conversionRule&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;conversionWord=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wex&quot;&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;converterClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;conversionRule&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;conversionWord=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wEx&quot;&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;converterClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 按照每天生成日志文件 --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FILE&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;${LOGS_DIR}/service.log&lt;span class=&quot;nt&quot;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;rollingPolicy&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--日志文件输出的文件名--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;FileNamePattern&amp;gt;&lt;/span&gt;${LOGS_DIR}/service.%d{yyyy-MM-dd}.%i.log&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FileNamePattern&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--日志文件保留天数--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;maxFileSize&amp;gt;&lt;/span&gt;5GB&lt;span class=&quot;nt&quot;&gt;&amp;lt;/maxFileSize&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/rollingPolicy&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%d{yyyy-MM-dd HH:mm:ss.SSS}┇%-5level┇[%thread]┇%logger{50}┇%msg%n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;filter&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 在日志配置级别的基础上过滤掉warn级别以下的日志 --&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;level&amp;gt;&lt;/span&gt;WARN&lt;span class=&quot;nt&quot;&gt;&amp;lt;/level&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.ConsoleAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%d{yyyy-MM-dd HH:mm:ss.SSS}┇%-5level┇[%thread]┇%logger{50}┇%msg%n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;springProfile&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;root&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;INFO&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FILE&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/springProfile&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;记得在 application.properties中添加如下参数，或者启动项中添加，这样springProfile能生效&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spring.profiles.active=dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Tue, 08 Feb 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/02/slf4j-logback</link>
				<guid isPermaLink="true">http://localhost:4000/2022/02/slf4j-logback</guid>
			</item>
		
			<item>
				<title>spring cloud stream</title>
				<description>&lt;h1 id=&quot;spring-cloud-stream---rocketmq&quot;&gt;Spring Cloud Stream  &amp;amp; RocketMQ&lt;/h1&gt;

&lt;h2 id=&quot;rocketmq有两种实现方式&quot;&gt;RocketMQ有两种实现方式&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Rocketmq-spring-boot-starter 框架 (rocketmq &amp;amp;&amp;amp; spring-boot)&lt;/li&gt;
  &lt;li&gt;Spring-cloud-starter-stream-rocketmq 框架。 推荐使用这种，因为spring-cloud-stream 集成多种MQ &lt;a href=&quot;https://spring.io/projects/spring-cloud-stream&quot;&gt;https://spring.io/projects/spring-cloud-stream&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我选择版本2.2.7.RELEASE: &lt;a href=&quot;https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-stream-rocketmq&quot;&gt;https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-stream-rocketmq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意处理冲突和添加依赖，我这边缺少了  spring-boot-actuator-autoconfigure&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-actuator-autoconfigure --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-actuator-autoconfigure&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.3.12.RELEASE&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sample &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream-samples&quot;&gt;https://github.com/spring-cloud/spring-cloud-stream-samples&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;代码很简单
&lt;img src=&quot;/images/202201/1643521131415.jpg&quot; alt=&quot;embbed&quot; /&gt;
&lt;img src=&quot;/images/202201/1643521145955.jpg&quot; alt=&quot;embbed&quot; /&gt;
&lt;img src=&quot;/images/202201/1643521166242.jpg&quot; alt=&quot;embbed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spring.cloud.stream.rocketmq.binder.name-server=127.0.0.1:9876
spring.cloud.stream.bindings.output1.destination=test-topic #主题 topic
spring.cloud.stream.bindings.output1.content-type=application/json

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;消费者&quot;&gt;消费者&lt;/h2&gt;

&lt;p&gt;配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spring.cloud.stream.rocketmq.binder.name-server=127.0.0.1:9876
spring.cloud.stream.bindings.input1.destination=test-topic
spring.cloud.stream.bindings.input1.content-type=application/json
spring.cloud.stream.bindings.input1.group=group
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;代码&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202201/1643523658805.jpg&quot; alt=&quot;embbed&quot; /&gt;
&lt;img src=&quot;/images/202201/1643523559576.jpg&quot; alt=&quot;embbed&quot; /&gt;
&lt;img src=&quot;/images/202201/1643523584792.jpg&quot; alt=&quot;embbed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;调试ok&lt;/p&gt;

</description>
				<pubDate>Fri, 28 Jan 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/Spring-Cloud-Stream(RocketMQ)</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/Spring-Cloud-Stream(RocketMQ)</guid>
			</item>
		
			<item>
				<title>jira</title>
				<description>&lt;h1 id=&quot;jira-部署&quot;&gt;Jira 部署&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;下载bin文件 &lt;a href=&quot;https://www.atlassian.com/software/jira/update&quot;&gt;https://www.atlassian.com/software/jira/update&lt;/a&gt;  8.12.0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建db&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;creat database jira

create user 'jira'@'%' IDENTIFIED BY 'password';

grant all privileges on jira.* to 'jira'@'%';

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;mysql connector jar包  &lt;a href=&quot;https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.27&quot;&gt;https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.27&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;破解jar包 &lt;a href=&quot;https://www.cnblogs.com/houchaoying/p/9096118.html&quot;&gt;https://www.cnblogs.com/houchaoying/p/9096118.html&lt;/a&gt; 拉到最下面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;cd /opt/atlassian/jira/bin&lt;/li&gt;
  &lt;li&gt;sh startup.sh&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;又&quot;&gt;又&lt;/h1&gt;

&lt;p&gt;卸载是在 /opt/atlassian/jira/uninstall&lt;/p&gt;

&lt;p&gt;关闭是在  /opt/atlassian/jira/bin/shutdown.sh&lt;/p&gt;

</description>
				<pubDate>Mon, 24 Jan 2022 14:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/jira</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/jira</guid>
			</item>
		
			<item>
				<title>matomo</title>
				<description>&lt;h1 id=&quot;matomo-部署&quot;&gt;Matomo 部署&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull matomo

docker run --restart=always -d --name matomo -p 7777:80 -v /opt/matomo/data:/data -v /opt/matomo/html:/var/www/html matomo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;mysql新建db 和用户&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;creat database matomo

create user 'matomo'@'%' IDENTIFIED BY 'password';

grant all privileges on matomo.* to 'matomo'@'%';

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是因为宿主机已经安装了 mysql 。 所以需要matomo能够访问宿主机的db&lt;/p&gt;

&lt;p&gt;在宿主机 ifconfig 命令后 。发现一个docker0 的网桥，记住他的ip 172.17.0.1&lt;/p&gt;

&lt;p&gt;在localhost:7777 中设置 database的时候 将 刚刚的ip[172.17.0.1]当成 host贴进去，应该就ok了.&lt;/p&gt;

&lt;p&gt;因为默认端口是80，咱们这里改成了7777 所以有可能需要去配置下
vi /var/www/html/config/config.ini.php&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[General]
trusted_hosts[] = &quot;10.10.48.194:7777&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;若是反向代理的话，需要获取用户ip，需要修改 html/core/IP.php&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public static function getIpFromHeader()
{
    ...
    
    if(isset($_SERVER['HTTP_X_REAL_IP'])) { //获取header中的ip
        $default = $_SERVER['HTTP_X_REAL_IP'];
    }
    
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Mon, 24 Jan 2022 14:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/matomo</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/matomo</guid>
			</item>
		
			<item>
				<title>rocket mq</title>
				<description>&lt;h1 id=&quot;rocketmq-部署&quot;&gt;RocketMQ 部署&lt;/h1&gt;

&lt;p&gt;基础术语：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;生产者(Producer)&lt;/li&gt;
  &lt;li&gt;消费者(Consumer)&lt;/li&gt;
  &lt;li&gt;主题（Topic)  一类消息的集合&lt;/li&gt;
  &lt;li&gt;生产者组（Producer Group) 这类Producer 发送同一类消息。如果发送事务消息，且原始生产者在发送后崩溃，Broker Server 会联系同一组的生产者实例提交或回溯消费&lt;/li&gt;
  &lt;li&gt;消费者组（Consumer Group) 消费同一类消息，注意同一个group的消费者必须订阅相同的topic。可以方便的负载均衡和容错&lt;/li&gt;
  &lt;li&gt;代理服务器（Broker Server)  负责存储和转发消息，还存储元数据，包括消费者组、进度偏移、主题和队列消息&lt;/li&gt;
  &lt;li&gt;名字服务器 （Name Server) 路由消息的提供者。 根据主题获取 Broker IP 的地址列表&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考 &lt;a href=&quot;https://www.cnblogs.com/fx-blog/p/11732749.html&quot;&gt;https://www.cnblogs.com/fx-blog/p/11732749.html&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;下载RocketMQ zip包 &lt;a href=&quot;https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.9.2/rocketmq-all-4.9.2-bin-release.zip&quot;&gt;https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.9.2/rocketmq-all-4.9.2-bin-release.zip&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;先启动 name service
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  nohup sh bin/mqnamesrv &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;再启动 broker service. 注意 vi bin/runbroker.sh 里面的 -Xms 内存要求是8g
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  nohup sh bin/mqbroker -n localhost:9876 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;测试下 是否可以正常生产、消费&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export NAMESRV_ADDR=localhost:9876
sh bin/tools.sh org.apache.rocketmq.example.quickstart.Producer
   
sh bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;关闭服务器
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;停止 broker：sh bin/mqshutdown broker
停止 nameserver：sh bin/mqshutdown namesrv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;控制台启动&quot;&gt;控制台启动&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;下载 控制台安装包 注意现在拆分出来了 &lt;a href=&quot;https://github.com/apache/rocketmq-dashboard&quot;&gt;https://github.com/apache/rocketmq-dashboard&lt;/a&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:apache/rocketmq-dashboard.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看  readme 直接 docker 搞起&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; docker pull apacherocketmq/rocketmq-dashboard:latest

 ## 注意这里看看本地端口哪个可用，我这里用了8081
 docker run -d --name rocketmq-dashboard -e &quot;JAVA_OPTS=-Drocketmq.namesrv.addr=192.168.1.145:9876&quot; -p 8081:8080 -t apacherocketmq/rocketmq-dashboard:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果是docker启动的话，上面Drocketmq.namesrv.addr参数直接用127.0.0.1:9876 会让dashboard无法连接到本地的9876端口，只能说docker容器中的 127.0.0.1 9876 不是宿主机的那个&lt;/p&gt;

    &lt;p&gt;如果是自行打包并且启动jar包的话，应该是用127.0.0.1 没问题的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;浏览器打开 localhost:8081&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/202201/1642757861082.jpg&quot; alt=&quot;embbed&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 21 Jan 2022 14:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/RocketMQ</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/RocketMQ</guid>
			</item>
		
			<item>
				<title>cluster</title>
				<description>&lt;h1 id=&quot;spring-cloud-alibaba---nacos-5-集群部署&quot;&gt;Spring Cloud Alibaba - nacos 5 集群部署&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html&quot;&gt;https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;域名 + SLB模式(内网SLB，不可暴露到公网，以免带来安全风险)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/202201/deployDnsVipMode.jpeg&quot; alt=&quot;embbed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置 cluster.conf
nacos应该会将注册服务同步给其他ip&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```
#it is ip
#example
192.168.1.145:8848
192.168.1.146:8848

```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;线上环境使用 外置数据源 &lt;a href=&quot;https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql&quot;&gt;https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改 db的url和帐号密码  并打jar包 &lt;a href=&quot;https://github.com/alibaba/nacos/blob/master/distribution/conf/application.properties&quot;&gt;https://github.com/alibaba/nacos/blob/master/distribution/conf/application.properties&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;重启nacos&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh startup.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;又-如果-第2步选择了内置数据源&quot;&gt;又： 如果 第2步选择了内置数据源&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh startup.sh -p embedded
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Thu, 20 Jan 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/nacos</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/nacos</guid>
			</item>
		
			<item>
				<title>load balance</title>
				<description>&lt;h1 id=&quot;spring-cloud-alibaba---nacos-4-负载均衡&quot;&gt;Spring Cloud Alibaba - nacos 4 负载均衡&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建两个不同端口的 producer&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    	&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;braindata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dubbodemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PostConstruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dubbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NetUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dubbo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProtocolConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Autowired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationContextAware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigurableApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stereotype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

     &lt;span class=&quot;p&quot;&gt;/**&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;一个机器部署两个&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dubbo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;生产者会产生端口占用问题，为了解决这个问题，在加载&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dubbo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;配置文件之前，先设置没被占用的端口&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;*/&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Component&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DynamicDubboPortReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ApplicationContextAware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Autowired&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ApplicationContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

         &lt;span class=&quot;n&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20880&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

         &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PostConstruct&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProtocolConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBeansOfType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProtocolConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProtocolConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAvailablePort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                 &lt;span class=&quot;nf&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;==========&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

         &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Override&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;applicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeansException&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applicationContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigurableApplicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applicationContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;如果producer 还有 server.port 可以通过设置启动项 -Dserver.port=7824 来改变&lt;/li&gt;
  &lt;li&gt;启动consumer ，测试发现 DubboReference 注解已经集成负载均衡功能了， 如果想指定某一个producer，可以通过 sticky=true 来设置。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;那dubbo是如何实现负载均衡的呢？ 我们来看下源代码 &lt;a href=&quot;https://github.com/apache/dubbo&quot;&gt;https://github.com/apache/dubbo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/caoyuanyenang/article/details/114837786&quot;&gt;https://blog.csdn.net/caoyuanyenang/article/details/114837786&lt;/a&gt; 这篇文章说的很详尽了&lt;/p&gt;

&lt;p&gt;我使用dubbo 2.7.8&lt;/p&gt;

&lt;p&gt;其中 AbstractClusterInvoker&lt;/p&gt;

&lt;p&gt;line 257 会根据服务名去注册中心获取ip&lt;/p&gt;

&lt;p&gt;Line 258 获取loadbalance&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202201/1642651014052.jpg&quot; alt=&quot;lb&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 20 Jan 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/load-balance</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/load-balance</guid>
			</item>
		
			<item>
				<title>jenkins-install</title>
				<description>&lt;h1 id=&quot;jenkins-install&quot;&gt;Jenkins-install&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jenkins.io/zh/doc/book/installing/&quot;&gt;https://www.jenkins.io/zh/doc/book/installing/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;记得把timezone设置成东8区&quot;&gt;记得把timezone设置成东8区&lt;/h2&gt;
&lt;p&gt;docker run -u root -d  –restart always -e TZ=”Asia/Shanghai” -p 8080:8080 -p 50000:50000 -v jenkins-data:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock jenkinsci/blueocean&lt;/p&gt;

&lt;p&gt;docker ps&lt;/p&gt;

&lt;p&gt;docker exec -it  ad5f918f0e58 bash&lt;/p&gt;

&lt;p&gt;bash-5.1# cat /var/jenkins_home/secrets/initialAdminPassword&lt;/p&gt;

&lt;p&gt;10.10.48.192:8080/&lt;/p&gt;
</description>
				<pubDate>Wed, 19 Jan 2022 11:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/jenkins</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/jenkins</guid>
			</item>
		
			<item>
				<title>gitlab-sync</title>
				<description>&lt;h1 id=&quot;gitlab-主从同步&quot;&gt;gitlab-主从同步&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/52de6a8d29d6&quot;&gt;https://www.jianshu.com/p/52de6a8d29d6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;lsyncd 配置完事就能跑了&lt;/p&gt;

&lt;p&gt;配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /etc/lsyncd.conf 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;日志&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f /var/log/lsyncd/lsyncd.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;问题： 创建了一个新的project， 从库没显示&lt;/p&gt;

&lt;p&gt;我显式重启了docker容器才在从库看到&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -detach --publish 8443:443 --publish 9091:80 --publish 8022:22  --publish 5005:5005 --name gitlab --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:13.7.1-ce.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Tue, 18 Jan 2022 13:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/gitlab-sync</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/gitlab-sync</guid>
			</item>
		
			<item>
				<title>gitlab-install</title>
				<description>&lt;h1 id=&quot;方法1-推荐-docker-安装&quot;&gt;方法1： 推荐 docker 安装&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull gitlab/gitlab-ce:[version]  最好选择跟主一个版本，避免出现什么幺蛾子

docker run -detach --publish 8443:443 --publish 9091:80 --publish 8022:22  --publish 5005:5005 --name gitlab --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:13.7.1-ce.0


可能需要改一些配置

vi /srv/gitlab/config/gitlab.rb

external_url 


postgresql['shared_buffers'] = &quot;256MB&quot;

如果puma 启动不了 看到pid不停变大
gitlab-ctl tail puma

puma['port'] = 8888
gitlab_workhorse['auth_backend'] = &quot;http://localhost:8888&quot;



&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;方法2不推荐gitlab-install&quot;&gt;方法2（不推荐）：gitlab-install&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_35844177/article/details/106876923&quot;&gt;https://blog.csdn.net/qq_35844177/article/details/106876923&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;sudo apt update
sudo apt install ca-certificates curl openssh-server postfix&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cd /tmp
 curl -LO https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh&lt;/p&gt;

    &lt;p&gt;less /tmp/script.deb.sh&lt;/p&gt;

    &lt;p&gt;sudo bash /tmp/script.deb.sh&lt;/p&gt;

    &lt;p&gt;sudo apt install gitlab-ce&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果一切顺利 那么 gitlab-ctl start 就够了。&lt;/p&gt;

&lt;h1 id=&quot;可能你的服务器上已经安装了其他的应用-占用了原有的端口&quot;&gt;可能你的服务器上已经安装了其他的应用 占用了原有的端口&lt;/h1&gt;
&lt;p&gt;则需要去修改配置文件&lt;/p&gt;

&lt;p&gt;vim /etc/gitlab/gitlab.rb&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;external_url 'http://10.1.48.192:9091' 

 puma['port'] =9092
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;重置配置-并-重启&quot;&gt;重置配置 并 重启&lt;/h2&gt;

&lt;p&gt;gitlab-ctl reconfigure&lt;/p&gt;

&lt;p&gt;gitlab-ctl restart&lt;/p&gt;

&lt;h2 id=&quot;查看日志命令&quot;&gt;查看日志命令：&lt;/h2&gt;

&lt;p&gt;gitlab-ctl tail&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;gitlab-ctl tail&lt;/td&gt;
      &lt;td&gt;grep -i error&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;查看端口命令&quot;&gt;查看端口命令：&lt;/h2&gt;

&lt;p&gt;lsof -i:9091&lt;/p&gt;

</description>
				<pubDate>Mon, 17 Jan 2022 13:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/01/gitlab-install</link>
				<guid isPermaLink="true">http://localhost:4000/2022/01/gitlab-install</guid>
			</item>
		
	</channel>
</rss>
