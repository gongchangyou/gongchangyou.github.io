<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mouse的博客</title>
		<description>记录学习生活工作的点滴</description>
		<link>https://gongchangyou.github.io</link>
		<atom:link href="https://gongchangyou.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>nfs磁盘共享</title>
				<description>&lt;p&gt;A机器磁盘太小了  希望通过A机器的路径访问到 有剩余空间的B机器&lt;/p&gt;

&lt;p&gt;0.先进入到B机器，发现没有安装nfs service&lt;/p&gt;

&lt;p&gt;1，配置NFS服务端&lt;/p&gt;

&lt;p&gt;$ sudo yum install nfs-utils portmap  （适用centos 5）
$ sudo yum install nfs-utils rpcbind  （适用centos 6）&lt;/p&gt;

&lt;p&gt;2.sudo vi /etc/exports&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/var/log/big_query 10.140.69.97(rw)  //前面的是本地的路径 后面是A机器的ip rw是读写权限 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参数说明：
rw：read-write，可读写；
ro：read-only，只读；
sync：同步写入（文件同时写入硬盘和内存），适用在通信比较频繁且实时性比较高的场合
async：异步写入（文件先写入内存，稍候再写入硬盘），性能较好（速度快），适合超大或者超多文件的写入，但有数据丢失的风险，比如突然断电等情况；
root_squash（默认）：将来访的root用户映射为匿名用户或用户组；
no_root_squash：来访的root用户保持root帐号权限（可能会不安全）；
no_all_squash（默认）：访问用户先与本机用户匹配，匹配失败后再映射为匿名用户或用户组；
all_squash：将来访的所有用户映射为匿名用户或用户组；
secure（默认）：限制客户端只能从小于1024的tcp/ip端口连接服务器；
insecure：允许客户端从大于1024的tcp/ip端口连接服务器；
anonuid：匿名用户的UID值，通常是nobody或nfsnobody，可以在此处自行设定；
anongid：匿名用户的GID值；
no_subtree_check：如果NFS输出的是一个子目录，则无需检查其父目录的权限（可以提高效率）&lt;/p&gt;

&lt;p&gt;3.sudo service nfs start //启动nfs服务 可以通过sudo service nfs status来查看当前状态&lt;/p&gt;

&lt;p&gt;4.激动人心的来了 去A服务器
	mount  10.140.99.122:/var/log/big_query  /var/path/of/local //前面的ip是B的ip 路径就是第2步中的路径 后面那个是A本地路径&lt;/p&gt;

</description>
				<pubDate>Thu, 07 Jul 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/07/nfs%E5%85%B1%E4%BA%AB</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/07/nfs%E5%85%B1%E4%BA%AB</guid>
			</item>
		
			<item>
				<title>sed替换命令</title>
				<description>&lt;p&gt;&lt;a herf=&quot;http://my.oschina.net/shelllife/blog/118337&quot;&gt; http://my.oschina.net/shelllife/blog/118337&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下面是网上找到的一些用法，经实践效果是各不相同的，只有一种是完全可行的。&lt;/p&gt;

&lt;p&gt;sed ‘:label;N;s/\n/:/;b label’ filename&lt;/p&gt;

&lt;p&gt;sed ‘:label;N;s/\n/:/;t label’ filename&lt;/p&gt;

&lt;p&gt;上面的两条命令可以实现将文件中的所有换行符替换为指定的字串，如命令中的冒号。命令的解释：&lt;/p&gt;

&lt;p&gt;:label;  这是一个标签，用来实现跳转处理，名字可以随便取(label),后面的b label就是跳转指令&lt;/p&gt;

&lt;p&gt;N;  N是sed的一个处理命令，追加文本流中的下一行到模式空间进行合并处理，因此是换行符可见&lt;/p&gt;

&lt;p&gt;s/\n/:/;   s是sed的替换命令，将换行符替换为冒号&lt;/p&gt;

&lt;p&gt;b label  或者 t label    b / t 是sed的跳转命令，跳转到指定的标签处&lt;/p&gt;

&lt;p&gt;标签跳转和N的追加命令实现了每一行的不间断放入模式处理空间，从而不会漏掉每一个换行符，而没有标签的话跳转的话，就只能每两行替换掉一个换行符，对比效果：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$  echo “a,b,c,d”&lt;/td&gt;
      &lt;td&gt;sed ‘s/,/\n/g’&lt;/td&gt;
      &lt;td&gt;sed ‘:x;N;s/\n/,/;b x’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;a,b,c,d&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$  echo “a,b,c,d”&lt;/td&gt;
      &lt;td&gt;sed ‘s/,/\n/g’&lt;/td&gt;
      &lt;td&gt;sed ‘N;s/\n/,/’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;a,b&lt;/p&gt;

&lt;p&gt;c,d&lt;/p&gt;

&lt;p&gt;&lt;a herf=&quot;http://blog.chinaunix.net/uid-26150691-id-3054317.html&quot;&gt;sed awk grep 筛选  http://blog.chinaunix.net/uid-26150691-id-3054317.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a herf=&quot;https://www.evernote.com/l/AKkZj1NmrPFIrIdnucubuEjEaLtAI5KjeVc&quot;&gt; sed awk grep 筛选 https://www.evernote.com/l/AKkZj1NmrPFIrIdnucubuEjEaLtAI5KjeVc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SVN_VERSION=&lt;code class=&quot;highlighter-rouge&quot;&gt;svn info |sed -n &#39;s/Revision: \(.*\)/\1/p&#39;&lt;/code&gt; #shell结果输出到变量 用`符号即可&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#在ssh之前先整理好参数 只要在ssh中 &#39;${ESCAPE_PATH}&#39;即可
SCRIPT_DIR=/var/home/aiming/world_all/bin/
ESCAPE_PATH=$(echo ${SCRIPT_DIR}tmp |sed &#39;s/\//\\\//g&#39;)
echo ${ESCAPE_PATH}
ssh aiming@lfs-cn-manage &quot;
cd ${SCRIPT_DIR}
echo &#39;${PUSH_CONTENT}&#39; &amp;gt; ${SCRIPT_DIR}tmp

./idc_world_all_update.sh update_notification &#39;${ESCAPE_PATH}&#39; 
&quot;
#&#39;\/var\/home\/aiming\/world_all\/bin\/tmp&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
				<pubDate>Thu, 07 Jul 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/07/sed%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/07/sed%E6%9B%BF%E6%8D%A2%E5%91%BD%E4%BB%A4</guid>
			</item>
		
			<item>
				<title>activity 别名</title>
				<description>&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;activity
        android:name=&quot;com.skymoons.zdbmgj.WXEntryActivity&quot;&amp;gt;&amp;lt;/activity&amp;gt; 
    &amp;lt;activity-alias
        android:name=&quot;.wxapi.WXEntryActivity&quot;
        android:targetActivity=&quot;com.skymoons.zdbmgj.WXEntryActivity&quot;
        android:exported=&quot;true&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;比如微信的接口只能用 .wxapi.WXEntryActivity 这个名字，现在 com.skymoons.zdbmgj.WXEntryActivity 用这个activity来代替&lt;/p&gt;

&lt;p&gt;记得在manifest之前 声明com.skymoons.zdbmgj.WXEntryActivity&lt;/p&gt;
</description>
				<pubDate>Fri, 01 Jul 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/07/activity%E5%88%AB%E5%90%8D</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/07/activity%E5%88%AB%E5%90%8D</guid>
			</item>
		
			<item>
				<title>atos命令 调试ios crash</title>
				<description>&lt;p&gt;打开Terminal，进入到build/Debug-iphoneos&lt;/p&gt;

&lt;p&gt;使用命令:&lt;/p&gt;

&lt;p&gt;$atos -arch armv7 -o XXX.app/XXX 0xabcdef&lt;/p&gt;

&lt;p&gt;XXX是你的App名字，用需要解析的地址替换上面的0xabcdef&lt;/p&gt;

&lt;p&gt;armv7是编译App时所用的Architecture，也可能是arm64，如果在simulator上的App，这个位置应该用i386&lt;/p&gt;

&lt;p&gt;=====================&lt;/p&gt;

&lt;p&gt;上传ipa:&lt;/p&gt;

&lt;p&gt;利用mac自带软件 Application Loader上传ipa&lt;/p&gt;
</description>
				<pubDate>Tue, 21 Jun 2016 17:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/06/atos-dSYM</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/06/atos-dSYM</guid>
			</item>
		
			<item>
				<title>ios抓包利器</title>
				<description>&lt;p&gt;Replica&lt;/p&gt;

&lt;p&gt;https://itunes.apple.com/cn/app/replica-web-developer-tool/id1068196306?mt=8&lt;/p&gt;

</description>
				<pubDate>Sun, 12 Jun 2016 15:28:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/06/ios%E6%8A%93%E5%8C%85%E5%88%A9%E5%99%A8</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/06/ios%E6%8A%93%E5%8C%85%E5%88%A9%E5%99%A8</guid>
			</item>
		
			<item>
				<title>lambda捕获</title>
				<description>&lt;p&gt;int x = 1, y=2;&lt;/p&gt;

&lt;p&gt;auto z = [x,y]{return x+ y;};&lt;/p&gt;

&lt;p&gt;//auto z = [x,&amp;amp;y]{return x+ y;}; 引用就是运行时，值就是编译时&lt;/p&gt;

&lt;p&gt;x= 3, y = 4;&lt;/p&gt;

&lt;p&gt;cout « z() « endl;&lt;/p&gt;

&lt;p&gt;[]捕获的如果是weak_ptr 貌似会丢失? why?&lt;/p&gt;

</description>
				<pubDate>Mon, 06 Jun 2016 10:31:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/06/lambda-%E6%8D%95%E8%8E%B7</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/06/lambda-%E6%8D%95%E8%8E%B7</guid>
			</item>
		
			<item>
				<title>python虚拟机</title>
				<description>&lt;p&gt;安装 创建 基本命令&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/ifantastic/p/4090726.html&quot;&gt;http://www.cnblogs.com/ifantastic/p/4090726.html&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 02 Jun 2016 10:31:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/06/python%E8%99%9A%E6%8B%9F%E6%9C%BA</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/06/python%E8%99%9A%E6%8B%9F%E6%9C%BA</guid>
			</item>
		
			<item>
				<title>mobileProvision</title>
				<description>&lt;p&gt;No matching provisioning profile found: XXXX, however, no such provisioning profile was found.CodeSign error: code signing is required for product type ‘Application’ in SDK ‘iOS 7.0’&lt;/p&gt;

&lt;p&gt;可是~/Library/MobileDevice/Provisioning Profiles是有的&lt;/p&gt;

&lt;p&gt;可能用户用到了root中的 所以需要将MobileDevice 整个文件夹拷到/Libraray/下&lt;/p&gt;

&lt;p&gt;上传到appStore的时候一直报这个错：Error ITMS-90034:”Missing or invalid signature. The bundle XXX at bundle path ‘Payload/XXX.app’ is not signed using  an Apple submission certificate.”&lt;/p&gt;

&lt;p&gt;解决方法:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;查看 Apple Worldwide Developer Relations Certification Authority 这个证书过期了没，重新下载并且将信任置为”使用系统默认”&lt;/p&gt;

    &lt;p&gt;查看你的distribution 的mobileProvision 是否用对，并且将你的distribution证书信任置为”使用系统默认”。//一般这样就ok了 亲测这个ok&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2.如果是用xcodebuild 命令编译的，最好用xcode 的Archive再编译一次重新提交试试&lt;/p&gt;

&lt;p&gt;3.如果 Apple Worldwide Developer  系统默认，你的distribution证书 始终信任 就会出现Error ITMS-90034&lt;/p&gt;
</description>
				<pubDate>Wed, 04 May 2016 10:31:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/05/iOS-mobileProvision</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/05/iOS-mobileProvision</guid>
			</item>
		
			<item>
				<title>tmux常用命令</title>
				<description>&lt;ul&gt;
&lt;li&gt;创建并指定session名字&lt;br /&gt;
		tmux new -s $session_name&lt;/li&gt;

&lt;li&gt;删除session&lt;br /&gt;
 Ctrl+b :kill-session&lt;/li&gt;
&lt;li&gt;临时退出session&lt;br /&gt;
Ctrl+b d&lt;/li&gt;
&lt;li&gt;列出session&lt;br /&gt;
tmux ls&lt;/li&gt;
&lt;li&gt;进入已存在的session&lt;br /&gt;
tmux a -t $session_name&lt;/li&gt;
&lt;li&gt;删除所有session&lt;br /&gt;
Ctrl+b :kill-server&lt;/li&gt;
&lt;li&gt;删除指定session&lt;br /&gt;
tmux kill-session -t $session_name&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
				<pubDate>Mon, 18 Apr 2016 10:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/04/tmux</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/04/tmux</guid>
			</item>
		
			<item>
				<title>VsVim快捷键</title>
				<description>&lt;ul&gt;
&lt;li&gt;切换头文件 按住ctrl  依次按下 K和O 你就KO了&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Mon, 18 Apr 2016 10:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/04/VsVim%E5%BF%AB%E6%8D%B7%E9%94%AE</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/04/VsVim%E5%BF%AB%E6%8D%B7%E9%94%AE</guid>
			</item>
		
	</channel>
</rss>
