<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mouse的博客</title>
		<description>记录学习生活工作的点滴</description>
		<link>https://gongchangyou.github.io</link>
		<atom:link href="https://gongchangyou.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>apt-get命令</title>
				<description>&lt;p&gt;apt-get update——在修改/etc/apt/sources.list或者/etc/apt/preferences之後运行该命令。此外您需要定期运行这一命令以确保您的软件包列表是最新的。&lt;/p&gt;

&lt;p&gt;apt-get install packagename——安装一个新软件包（参见下文的aptitude）&lt;/p&gt;

&lt;p&gt;apt-get remove packagename——卸载一个已安装的软件包（保留配置文件）&lt;/p&gt;

&lt;p&gt;apt-get –purge remove packagename——卸载一个已安装的软件包（删除配置文件）&lt;/p&gt;

&lt;p&gt;dpkg –force-all –purge packagename 有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。&lt;/p&gt;

&lt;p&gt;apt-get autoclean apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件&lt;/p&gt;

&lt;p&gt;apt-get clean 这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。&lt;/p&gt;

&lt;p&gt;apt-get upgrade——更新所有已安装的软件包&lt;/p&gt;

&lt;p&gt;apt-get dist-upgrade——将系统升级到新版本&lt;/p&gt;

&lt;p&gt;apt-cache search string——在软件包列表中搜索字符串&lt;/p&gt;

&lt;p&gt;dpkg -l package-name-pattern——列出所有与模式相匹配的软件包。如果您不知道软件包的全名，您可以使用“&lt;em&gt;package-name-pattern&lt;/em&gt;”。&lt;/p&gt;

&lt;p&gt;aptitude——详细查看已安装或可用的软件包。与apt-get类似，aptitude可以通过命令行方式调用，但仅限于某些命令——最常见的有安装和卸载命令。由于aptitude比apt-get了解更多信息，可以说它更适合用来进行安装和卸载。&lt;/p&gt;

&lt;p&gt;aptitude search XXX&lt;/p&gt;

&lt;p&gt;apt-cache showpkg pkgs——显示软件包信息。&lt;/p&gt;

&lt;p&gt;apt-cache dumpavail——打印可用软件包列表。&lt;/p&gt;

&lt;p&gt;apt-cache show pkgs——显示软件包记录，类似于dpkg –print-avail。&lt;/p&gt;

&lt;p&gt;apt-cache pkgnames——打印软件包列表中所有软件包的名称。&lt;/p&gt;

&lt;p&gt;dpkg -S file——这个文件属于哪个已安装软件包。&lt;/p&gt;

&lt;p&gt;dpkg -L package——列出软件包中的所有文件。&lt;/p&gt;

&lt;p&gt;apt-file search filename——查找包含特定文件的软件包（不一定是已安装的），这些文件的文件名中含有指定的字符串。apt-file是一个独立的软件包。您必须先使用apt-get install来安装它，然後运行apt-file update。如果apt-file search filename输出的内容太多，您可以尝试使用apt-file search filename | grep -w filename（只显示指定字符串作为完整的单词出现在其中的那些文件名）或者类似方法，例如：apt-file search filename | grep /bin/（只显示位于诸如/bin或/usr/bin这些文件夹中的文件，如果您要查找的是某个特定的执行文件的话，这样做是有帮助的）。&lt;/p&gt;

&lt;p&gt;apt-get update 系统软件包更新&lt;/p&gt;
</description>
				<pubDate>Thu, 09 Nov 2017 10:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2017/11/apt-get%E5%91%BD%E4%BB%A4</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2017/11/apt-get%E5%91%BD%E4%BB%A4</guid>
			</item>
		
			<item>
				<title>查找git中有特定字符串的文件</title>
				<description>&lt;p&gt;查看我的修改中是否含有var_dump字符串&lt;/p&gt;

&lt;p&gt;git log --name-only --author=&quot;mouse&quot; |grep php |xargs find {} |xargs grep var_dump&lt;/p&gt;
</description>
				<pubDate>Mon, 06 Nov 2017 10:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2017/11/%E6%9F%A5%E6%89%BEgit%E4%B8%AD%E6%9C%89%E7%89%B9%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%87%E4%BB%B6</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2017/11/%E6%9F%A5%E6%89%BEgit%E4%B8%AD%E6%9C%89%E7%89%B9%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%87%E4%BB%B6</guid>
			</item>
		
			<item>
				<title>mysql查找多行重复记录</title>
				<description>&lt;p&gt;select user_name,count(*) as count from user_table group by user_name having count&amp;gt;1;&lt;/p&gt;

</description>
				<pubDate>Tue, 24 Oct 2017 10:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2017/10/mysql%E6%9F%A5%E6%89%BE-%E5%A4%9A%E8%A1%8C%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BD%95</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2017/10/mysql%E6%9F%A5%E6%89%BE-%E5%A4%9A%E8%A1%8C%E9%87%8D%E5%A4%8D%E8%AE%B0%E5%BD%95</guid>
			</item>
		
			<item>
				<title>memcache过期时间</title>
				<description>&lt;p&gt;memcache 过期时间的设置&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#define REALTIME_MAXDELTA 60*60*24*30  &lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rel_time_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REALTIME_MAXDELTA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#如果超过30天  &lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process_started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#又小于进程启动时间，直接失效  &lt;/span&gt;
                      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rel_time_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   
               &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rel_time_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process_started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#返回相对时间 exptime时间戳 - 进程启动时间  &lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#没超过30天的秒数，就是用当前运行时间+exptime  &lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rel_time_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exptime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#返回相对时间 服务器运行时间(从启动到现在的时间) + exptime  &lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;当memcache的current_time不对，当(process_started + current_time)落后系统时间戳时，导致cache迟迟不过期,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/201710/F5C3A0FD-1B86-4D8E-8611-0AF63D8E7D02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;uptime就是运行时间&lt;br /&gt;
time是当前时间 （memcache启动时间 + uptime)&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;当电脑休眠时，memcache服务器的uptime不会增长，memcache的当前时间就不更新了！！&lt;/font&gt;
&lt;p&gt;(uptime就是代码中的current_time)&lt;/p&gt;

&lt;font color=&quot;blue&quot;&gt;如何处理？ 重启memcache  &lt;/font&gt;

&lt;p&gt;ps aux|grep memcache&lt;br /&gt;
kill -9 pid&lt;br /&gt;
/usr/bin/memcached -d restart -m 64 -p 11211 -u memcache -l 127.0.0.1&lt;/p&gt;

</description>
				<pubDate>Fri, 20 Oct 2017 11:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2017/10/memcache%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2017/10/memcache%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4</guid>
			</item>
		
			<item>
				<title>在sublime 2中添加php_beautifer </title>
				<description>&lt;p&gt;1.下载go-pear.phar 到php安装目录下，地址http://pear.php.net/go-pear.phar 。//macbook 无法放到/usr/bin 中，我随便放到了/User/gongchangyou/ 下 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;2.cd /user/gongchangyou&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php go-pear.phar
一路回车
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.export PATH=”/Users/gongchangyou/pear/bin:$PATH” 将这行加到~/.bash_profile中，source ~/.bash_profile&lt;/p&gt;

&lt;p&gt;4.pear install –alldeps channel://pear.php.net/php_beautifier-0.1.15&lt;/p&gt;

&lt;p&gt;5.在Sublime text中安装beautifier插件,  按ctrl+shift+p 在package control中搜索install ,回车后稍等一下就会跳出好多插件,搜索phpbeautifier,回车安装&lt;/p&gt;

&lt;p&gt;6.重点来了: 去到sublime =&amp;gt; Preferences =&amp;gt; Browse Packages 打开PhpBeautifier/php_beautifier.py&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cmd = &quot;php_beautifier&quot;
cmd = &quot;/Users/gongchangyou/pear/bin/php_beautifier&quot; #替换成之前第4步安装的php_beautifier的路径
如果有需求将class和function 的开启花括号放到下一行
filters = &quot;ArrayNested() NewLines(before=switch:while:for:foreach:T_CLASS:return:break) Pear(add-header=false,newline_class=true,newline_function=true)&quot; //这里需要加上newline_class=true,newline_function=true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;7.试试ctrl+alt+f 或者 command+shift+p   搜索format php&lt;/p&gt;

</description>
				<pubDate>Sat, 30 Sep 2017 13:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2017/09/php_beautifier</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2017/09/php_beautifier</guid>
			</item>
		
			<item>
				<title>csv文件导入mysql</title>
				<description>&lt;p&gt;load data infile “/data/xlive/tools/masterdata/badwords.csv” &lt;br /&gt;
into table xlive.badwords character set utf8 FIELDS ESCAPED BY    ‘\’ TERMINATED BY     ‘,’ OPTIONALLY ENCLOSED BY ‘&#39;’ LINES TERMINATED BY   ‘\n’ ignore 1 lines;&lt;/p&gt;

&lt;p&gt;ERROR 1290 (HY000): The MySQL server is running with the –secure-file-priv option so it cannot execute this statement 
错误咋办？&lt;/p&gt;

&lt;p&gt;在/etc/my.cnf中添加
secure-file-priv=”/data/xlive/tools/masterdata/”&lt;/p&gt;

&lt;font style=&quot;color:red&quot;&gt;注意： csv文件中，逗号隔开，不要有空格&lt;/font&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;http://www.51testing.com/html/46/262846-837305.html&quot;&gt;替换mysql中某个字段的部分内容&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将cdb_pms表subject字段中的Welcom to替换成 欢迎光临&lt;br /&gt;
UPDATE &lt;code class=&quot;highlighter-rouge&quot;&gt;cdb_pms&lt;/code&gt;&lt;br /&gt;
SET &lt;code class=&quot;highlighter-rouge&quot;&gt;subject&lt;/code&gt; = REPLACE(&lt;code class=&quot;highlighter-rouge&quot;&gt;subject&lt;/code&gt;, ‘Welcome to’, ‘欢迎光临’)&lt;br /&gt;
WHERE INSTR(&lt;code class=&quot;highlighter-rouge&quot;&gt;subject&lt;/code&gt;,’Welcome to’) &amp;gt; 0&lt;/p&gt;
</description>
				<pubDate>Wed, 13 Sep 2017 13:25:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2017/09/mysql-load-data</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2017/09/mysql-load-data</guid>
			</item>
		
			<item>
				<title>光照模型</title>
				<description>&lt;p&gt;标准光照模型&lt;/p&gt;

&lt;p&gt;漫反射&lt;/p&gt;

&lt;p&gt;C_diffuse = C_light * M_diffuse * max(0, dot(n,l))&lt;/p&gt;

&lt;p&gt;高光反射&lt;/p&gt;

&lt;p&gt;r = 2(n . l)n - l;&lt;/p&gt;

&lt;p&gt;C_specular = C_light * M_specular * power(max(0, dot(v, r)), M_gloss);&lt;/p&gt;

&lt;p&gt;C_specular = C_light * M_specular * power(max(0, dot(n, h)), M_gloss);&lt;/p&gt;
</description>
				<pubDate>Fri, 11 Nov 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/11/shader%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/11/shader%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B</guid>
			</item>
		
			<item>
				<title>vim 查看空格</title>
				<description>&lt;p&gt;set listchars=tab:&amp;gt;-,trail:-&lt;/p&gt;
</description>
				<pubDate>Fri, 26 Aug 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/08/vim-%E6%9F%A5%E7%9C%8Btab</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/08/vim-%E6%9F%A5%E7%9C%8Btab</guid>
			</item>
		
			<item>
				<title>mysqldump --tz-utc=0 的坑</title>
				<description>&lt;p&gt;mysqldump 时区对不上 用unix_timestamp 在mysql里面运行还是ok的 结果用mysqldump 就不对了&lt;/p&gt;

&lt;p&gt;InsertTime &amp;gt;= unix_timestamp(date_sub(curdate(), INTERVAL 1 DAY)) and InsertTime &amp;lt;= unix_timestamp(curdate())&lt;/p&gt;

&lt;p&gt;需要用–tz-utc=0 来设置默认时区，否则用的就是mysqldump在默认情况下，是按’+00:00’(中时区).&lt;/p&gt;

&lt;p&gt;mysqldump ${MYSQLDUMP_OPTION}  –databases ${database_schema} –tables ${database_table} –skip-opt –quick –single-transaction –hex-blob –no-create-info –tz-utc=0 –where “${mysqldump_where}” | grep INSERT &amp;gt; ${dump_file}&lt;/p&gt;

&lt;p&gt;http://www.linuxidc.com/Linux/2012-12/76184.htm&lt;/p&gt;
</description>
				<pubDate>Fri, 26 Aug 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/08/mysqldump-%E6%97%B6%E5%8C%BA%E9%97%AE%E9%A2%98%E5%89%AF%E6%9C%AC</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/08/mysqldump-%E6%97%B6%E5%8C%BA%E9%97%AE%E9%A2%98%E5%89%AF%E6%9C%AC</guid>
			</item>
		
			<item>
				<title>ssh rsa</title>
				<description>&lt;p&gt;1.ssh-keygen  -t rsa&lt;/p&gt;

&lt;p&gt;2.在 ~/.ssh/config中添加&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Host lfs-cn-manage 
	  HostName localhost  #这里写ip
	  User aiming
	  IdentityFile ~/.ssh/id_rsa.aiming
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.chmod 666 ~/.ssh/config #勿忘&lt;/p&gt;

&lt;p&gt;4.将pub key 添加到服务端的 ~/.ssh/authorized_keys 中&lt;/p&gt;

&lt;p&gt;搞定！&lt;/p&gt;

</description>
				<pubDate>Wed, 20 Jul 2016 13:24:06 +0800</pubDate>
				<link>https://gongchangyou.github.io/2016/07/ssh-%E4%BF%9D%E5%AD%98host%E5%92%8C%E8%AE%BE%E7%BD%AE%E5%88%AB%E5%90%8D</link>
				<guid isPermaLink="true">https://gongchangyou.github.io/2016/07/ssh-%E4%BF%9D%E5%AD%98host%E5%92%8C%E8%AE%BE%E7%BD%AE%E5%88%AB%E5%90%8D</guid>
			</item>
		
	</channel>
</rss>
