<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mouse的博客</title>
		<description>记录学习生活工作的点滴</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>go-1</title>
				<description>&lt;h1 id=&quot;go1&quot;&gt;Go（1）&lt;/h1&gt;

&lt;p&gt;学习网站 &lt;a href=&quot;https://tiancaiamao.gitbooks.io/go-internals/content/zh/&quot;&gt;https://tiancaiamao.gitbooks.io/go-internals/content/zh/&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Fri, 11 Mar 2022 11:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/go(1)</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/go(1)</guid>
			</item>
		
			<item>
				<title>go-opengl-1</title>
				<description>&lt;h1 id=&quot;go-opengl1&quot;&gt;Go OpenGL（1）&lt;/h1&gt;

&lt;p&gt;官网教程 &lt;a href=&quot;https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/01%20OpenGL/#_3&quot;&gt;https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/01%20OpenGL/#_3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;学习使用的代码仓库 &lt;a href=&quot;https://github.com/gongchangyou/opengl-learn&quot;&gt;https://github.com/gongchangyou/opengl-learn&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 10 Mar 2022 11:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/opengl-go-1</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/opengl-go-1</guid>
			</item>
		
			<item>
				<title>go-opengl</title>
				<description>&lt;h1 id=&quot;go-opengl&quot;&gt;Go OpenGL&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;先安装一个 goland &lt;a href=&quot;https://www.jetbrains.com/zh-cn/go/&quot;&gt;https://www.jetbrains.com/zh-cn/go/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置GOROOT, GOPATH, 注意GO Modules配置成如下这样
&lt;img src=&quot;/images/202203/421646811018_.pic.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;
&lt;img src=&quot;/images/202203/401646810998_.pic.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;
&lt;img src=&quot;/images/202203/411646811008_.pic.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;proxy也设置一下
  &lt;img src=&quot;/images/202203/451646811683_.pic.jpg&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果要使用命令行的话 ，还需要 ~/.bash_profile中添加 ，并source ~/.bash_profile&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export GOPROXY=https://goproxy.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;去有 go.mod 的文件同级敲命令&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; go mod tidy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;external libraries中应该就引入了&lt;/p&gt;

&lt;p&gt;问题1: 多个文件时， go run main.go 会报错 某个函数undefined。&lt;/p&gt;

&lt;p&gt;两种解决方案：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;将函数，变量等都挪到 main.go 里面&lt;/li&gt;
  &lt;li&gt;执行 go run *.go 而不是 go run main.go&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;问题2： ubuntu缺少组件库 会报错&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
root@mouse-Precision-3650-Tower:/home/mouse/Downloads/opengl-heatmap/trial# go run *.go
# pkg-config --cflags  -- gl gl
Package gl was not found in the pkg-config search path.
Perhaps you should add the directory containing `gl.pc'
to the PKG_CONFIG_PATH environment variable
No package 'gl' found
Package gl was not found in the pkg-config search path.
Perhaps you should add the directory containing `gl.pc'
to the PKG_CONFIG_PATH environment variable
No package 'gl' found
pkg-config: exit status 1
# github.com/go-gl/glfw/v3.3/glfw
In file included from ./glfw/src/internal.h:188,
                 from ./glfw/src/context.c:30,
                 from /root/go/pkg/mod/github.com/go-gl/glfw/v3.3/glfw@v0.0.0-20211213063430-748e38ca8aec/c_glfw.go:4:
./glfw/src/x11_platform.h:36:10: fatal error: X11/Xcursor/Xcursor.h: No such file or directory
   36 | #include &amp;lt;X11/Xcursor/Xcursor.h&amp;gt;
      |          ^~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/go-gl/glfw/issues/129&quot;&gt;https://github.com/go-gl/glfw/issues/129&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;那就根据报错找到对应的lib 安装即可&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install libxcursor-dev

apt-get install libxinerama-dev

apt-get install libxrandr-dev

apt-get install libxi-dev

sudo apt-get install mesa-common-dev
sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev

sudo apt-get install Xxf86vm*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;问题3： ubuntu 如何查看opengl版本？&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install mesa-utils
glxinfo | grep -i opengl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Thu, 10 Mar 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/opengl-go</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/opengl-go</guid>
			</item>
		
			<item>
				<title>java-opengl</title>
				<description>&lt;h1 id=&quot;java-opengl&quot;&gt;java opengl&lt;/h1&gt;

&lt;p&gt;Lwjgl  vs jogl ?&lt;/p&gt;

&lt;p&gt;我看https://mvnrepository.com上 jogl很久没更新了，最近一次是2015年, 怕是已经没人维护了。&lt;/p&gt;

&lt;p&gt;选择lwjgl试试&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.lwjgl.org/guide&quot;&gt;https://www.lwjgl.org/guide&lt;/a&gt; 官网好看&lt;/p&gt;

&lt;p&gt;官方demo :&lt;a href=&quot;https://github.com/LWJGL/lwjgl3-demos&quot;&gt;https://github.com/LWJGL/lwjgl3-demos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;可以修改mainclass 查看不同的demo效果&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;transformers&amp;gt;
	&amp;lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&amp;gt;
     &amp;lt;mainClass&amp;gt;org.lwjgl.demo.${class}&amp;lt;/mainClass&amp;gt;
     &amp;lt;/transformer&amp;gt;
  &amp;lt;/transformers&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可是这个是一个专门的window， 可以播放opengl。 希望导出一个图片，后续对opengl有研究了再继续这个项目。&lt;/p&gt;

</description>
				<pubDate>Wed, 09 Mar 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/opengl-java</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/opengl-java</guid>
			</item>
		
			<item>
				<title>gitlab-container</title>
				<description>&lt;h1 id=&quot;gitlab-container-registry&quot;&gt;gitlab container registry&lt;/h1&gt;

&lt;p&gt;官网说明 ：[https://docs.gitlab.cn/jh/administration/packages/container_registry.html](https://docs.gitlab.cn/jh/administration/packages/container_registry.html&lt;/p&gt;

&lt;p&gt;即可以进到docker容器中查看配置文件，也可以先查看挂载数据卷，再看宿主机上的文件。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;docker inspect container_name&lt;/td&gt;
      &lt;td&gt;grep Mounts -A 20&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;在这个配置中可以看到  容器的镜像仓库的port等配置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cat /srv/gitlab/data/gitlab-rails/etc/gitlab.yml|grep 5005 -C 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;每个工程的镜像在如图这个位置查看
&lt;img src=&quot;/images/202203/WechatIMG350.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不知道如何用docker客户端连接私有镜像库&lt;/p&gt;
</description>
				<pubDate>Wed, 09 Mar 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/gitlab-container</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/gitlab-container</guid>
			</item>
		
			<item>
				<title>gitlab-runner</title>
				<description>&lt;h1 id=&quot;gitlab-cicd&quot;&gt;gitlab CI/CD&lt;/h1&gt;

&lt;p&gt;持续集成和部署，其实我更倾向于使用jenkins，因为可以自由编写脚本和手动触发，回滚也比较方便。&lt;/p&gt;

&lt;p&gt;gitlab CI/CD就是把部署的脚本 统一到代码仓库。&lt;/p&gt;

&lt;p&gt;但是因为现有项目使用 CI/CD 所以还是先熟悉起来。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/ci/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/105157319&quot;&gt;https://zhuanlan.zhihu.com/p/105157319&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;runner分两种，shared runner / specific runner 看名字就知道了，前者是很多工程共享的runner，后者跟工程是1对1的。&lt;/p&gt;

&lt;p&gt;我们先试试看 shared runner. 先打开 http://gitlab.cebsit.ac.cn/admin/runners&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/1646634355101.jpg&quot; alt=&quot;pgadmin&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注册的时候把url 和token写进去&lt;/p&gt;

&lt;p&gt;官方文档写的很清楚了 &lt;a href=&quot;https://docs.gitlab.com/runner/install/docker.html&quot;&gt;https://docs.gitlab.com/runner/install/docker.html&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;docker 启动
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  docker run -d --name gitlab-runner --restart always \
     -v /srv/gitlab-runner/config:/etc/gitlab-runner \
     -v /var/run/docker.sock:/var/run/docker.sock \
     gitlab/gitlab-runner:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;注册 runner ，这样gitlab就知道让这台服务器执行job了&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --rm -it -v /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;问题1： 一直timeout，可能需要显式写tags, 如果你的 .gitlab-ci.yml 中没有显式写tags ,那就把这个选项勾上 “Run untagged jobs”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/WechatIMG37.png&quot; alt=&quot;pgadmin&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;问题2： remote: You are not allowed to download code from this project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/WechatIMG38.jpeg&quot; alt=&quot;pgadmin&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;尝试去docker容器中新增&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -t RSA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;把 ~/.ssh/id_rsa.pub 添加到工程的用户的ssh key中,  搞定!&lt;/p&gt;

&lt;p&gt;注意： gitlab-runner的配置是在 /etc/gitlab-runner/config.toml&lt;/p&gt;

&lt;p&gt;问题3 ：&lt;/p&gt;

&lt;p&gt;偶发 报错 ，重试几次又好了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;error: could not lock config file /home/gitlab-runner/builds/eFSxVaBE/0/gongcy/test202/.git/config: Permission denied
fatal: could not set 'core.repositoryformatversion' to '0'
Cleaning up project directory and file based variables
00:00
ERROR: Job failed: exit status 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有看到网上这么解，没试过。 &lt;a href=&quot;https://stackoverflow.com/questions/59995132/could-not-set-core-repositoryformatversion-to-0&quot;&gt;https://stackoverflow.com/questions/59995132/could-not-set-core-repositoryformatversion-to-0&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --file=.git/config core.repositoryformatversion 1  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Fri, 04 Mar 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/gitlab-runner</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/gitlab-runner</guid>
			</item>
		
			<item>
				<title>postgis</title>
				<description>&lt;h1 id=&quot;postgis&quot;&gt;Postgis&lt;/h1&gt;

&lt;p&gt;一个postgresql的扩展，空间数据库&lt;/p&gt;

&lt;h3 id=&quot;法1-docker安装&quot;&gt;法1： docker安装&lt;/h3&gt;

&lt;p&gt;1 &lt;a href=&quot;https://www.cnblogs.com/6324/p/11947388.html&quot;&gt;https://www.cnblogs.com/6324/p/11947388.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run
-v $(pwd)/data:/var/lib/postgresql/data -e POSTGRES_DB=&quot;openmaptiles&quot; -e POSTGRES_USER=&quot;test&quot; -e POSTGRES_PASSWORD=&quot;test&quot; -p 15432:5432 -d openmaptiles/postgis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2  因为上一步里面各种扩展都安装好了， 所以 这里我们就直接 操作DDL 和DML即可&lt;a href=&quot;https://zhuanlan.zhihu.com/p/43374582&quot;&gt;https://zhuanlan.zhihu.com/p/43374582&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;具体操作面板在这&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/1646357982434.jpg&quot; alt=&quot;pgadmin&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3 如何批量导入数据？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/1646358797595.jpg&quot; alt=&quot;pgadmin&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#单个的写入point语句是这样的
insert into point_test (name,pt) values ('p1',ST_GeomFromText('Point(0 0 0)'));

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4 如何批量导入geometry字段类型的数据。以下可以看到 pt geometry字段是一堆字符串，如果已知三维坐标 恐怕无法自行写出那样的字符串.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/1646364305354.jpg&quot; alt=&quot;pgadmin&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;只能曲线救国了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 先在表里新增字段x, y，z （numeric）

2. 用csv把 x,y,z 字段导入

3. update 一把，将x,y,z 生成的point 写到pt字段中

    ```
    update point_test set pt = ST_SetSRID(ST_MakePoint(x,y,z),0) [where id=5];
    ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里导入的时候注意 csv中如果有标题的话 header，记得勾选header&lt;/p&gt;

&lt;p&gt;column 必须匹配，多一列pgsql就不认识了，导入不了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/1646369341367.jpg&quot; alt=&quot;pgadmin&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5 如何查看执行效率？性能？&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	explain Analyze select id,name,ST_3DDistance(ST_GeomFromText('Point(0 0 0)'),pt)  from point_test;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;压测结果，导入了17000个点， 搜索距离最远的两个点&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select p1.id,p2.id, p1.name,p2.name,ST_3DDistance(p1.pt,p2.pt) as distance  from point_test as p1,point_test as p2 where p1.id &amp;gt; p2.id order by distance desc limit 1;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;不加索引的情况下是53.4s,加了gist索引 还是 53.4s。 没生效？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://postgis.net/workshops/postgis-intro/indexing.html&quot;&gt;http://postgis.net/workshops/postgis-intro/indexing.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为这个索引不是所有函数都能生效的，因为索引还是根据空间划分矩形，大部分是cover，intersect之类的功能&lt;/p&gt;

&lt;p&gt;至于用gist 还是spgist索引，取决于数据的稠密程度 &lt;a href=&quot;https://blog.crunchydata.com/blog/the-many-spatial-indexes-of-postgis&quot;&gt;https://blog.crunchydata.com/blog/the-many-spatial-indexes-of-postgis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;实际使用下来，1百万行，1000^3 的立方体中， 搜索在某个矩阵中的（10x10) 耗时是100ms左右，还是非常快的。如果不加索引的话，计算超时了都，估计1分钟之后都不会有结果。&lt;/p&gt;

&lt;p&gt;索引大小52M&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WITH xyz AS (
SELECT 1000*random() AS x, 1000*random() AS y, 1000*random() AS z
FROM generate_series(1, 1000)),
boxes AS (
  SELECT ST_3DMakeBox(ST_MakePoint(x-5, y-5, z-5),
    ST_MakePoint(x+5 ,y+5.1875, z+15)) AS geom
  FROM xyz
)
SELECT Count(*)
FROM points, boxes
WHERE points.geom &amp;amp;&amp;amp; boxes.geom;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有些点是否在某个不规则Polygon中的功能也可以使用该数据库&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.aliyun.com/document_detail/116091.html?utm_content=g_1000230851&amp;amp;spm=5176.20966629.toubu.3.f2991ddcpxxvD1#h2-st_makeenvelope&quot;&gt;https://help.aliyun.com/document_detail/116091.html?utm_content=g_1000230851&amp;amp;spm=5176.20966629.toubu.3.f2991ddcpxxvD1#h2-st_makeenvelope&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但是因为我们的数据是在亿级， 按照 &lt;a href=&quot;https://github.com/digoal/blog/blob/master/201601/20160119_01.md?spm=a2c6h.12873639.0.0.45131bffUfN7jx&amp;amp;file=20160119_01.md&quot;&gt;PostgreSQL 百亿地理位置数据 近邻查询性能&lt;/a&gt;  建立索引确实要花点时间,1亿行gis数据大约5GB索引,查询上述在box中的点耗时只有100ms. 但是如果box再大一点,里面包括1kw数据时，就需要花大约10s时间。生产环境是不可能使用了，OLAP场景还行。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;select pg_relation_size('gist2')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/202203/WechatIMG46.png&quot; alt=&quot;pgadmin&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WITH xyz AS (
SELECT 1000*random() AS x, 1000*random() AS y, 1000*random() AS z
FROM generate_series(1, 1000)),
boxes AS (
  SELECT ST_3DMakeBox(ST_MakePoint(x-0.1, y-5, z-5),
    ST_MakePoint(x+0.1 ,y+5.1875, z+15)) AS geom
  FROM xyz
)
SELECT ST_AsText(points.geom), ST_AsText(boxes.geom)
FROM points, boxes
WHERE  ST_3DIntersects(boxes.geom ,points.geom) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;//之前那个 &amp;amp;&amp;amp; 操作会有重复数据，这个 ST_3DIntersects 函数可以给出在这个box中的点, 返回2000个点 耗时差不多 500ms&lt;/p&gt;

&lt;h3 id=&quot;法2以下的甭看了&quot;&gt;法2：以下的甭看了&lt;/h3&gt;

&lt;p&gt;源 /etc/apt/sources.list ， 如果无法安装，请变更源&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-cache search postgis
apt-get install postgis

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;以上这个一般来说搞不定因为源没有postgis-只能下载各种源码-比如postgis的源码-tar包解压缩之后&quot;&gt;以上这个一般来说搞不定，因为源没有postgis ，只能下载各种源码 ,比如postgis的源码 ，tar包解压缩之后&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;完事之后-还需要安装&quot;&gt;完事之后 还需要安装&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install postgresql-9.5-postgis-2.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一通折腾之后，算是安装完成了。&lt;/p&gt;

</description>
				<pubDate>Wed, 02 Mar 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/postgis</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/postgis</guid>
			</item>
		
			<item>
				<title>Postgresql</title>
				<description>&lt;h1 id=&quot;postgresql&quot;&gt;Postgresql&lt;/h1&gt;

&lt;h3 id=&quot;ubuntu-安装-postgresql&quot;&gt;ubuntu 安装 postgresql&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.cn/article-11480-1.html&quot;&gt;https://linux.cn/article-11480-1.html&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;sudo apt update&lt;/li&gt;
  &lt;li&gt;sudo apt install postgresql postgresql-contrib&lt;/li&gt;
  &lt;li&gt;service postgresql start&lt;/li&gt;
  &lt;li&gt;sudo -s postgresql	 #切换用户&lt;/li&gt;
  &lt;li&gt;pgsql 	#登录PostgreSQL&lt;/li&gt;
  &lt;li&gt;ALTER USER postgres WITH PASSWORD ‘password’; # 初始化密码&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;安装gui--pgadmin&quot;&gt;安装GUI  pgadmin&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;docker pull dpage/pgadmin4&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;docker run -d -p 5433:80 –name pgadmin4 -e PGADMIN_DEFAULT_EMAIL=test@123.com -e PGADMIN_DEFAULT_PASSWORD=123456 -v /var/lib/pgadmin:/var/lib/pgadmin dpage/pgadmin4&lt;/p&gt;

    &lt;p&gt;注意这里的volume 绑定的位置，未来导入导出csv 可以使用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;网页打开Localhost:5433 输入第二步的用户名密码&lt;/p&gt;

    &lt;p&gt;问题： create server 时发现 无法连接server&lt;/p&gt;

    &lt;p&gt;解决：去 /etc/postgresql/12/main下 修改 postgresql.conf 文件&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen_addresses = '*' 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;重启postgresql : service postgresql restart&lt;/p&gt;

    &lt;p&gt;问题2： no pg_hba.conf entry for host “172.17.0.4”, … SSL on connection to server at “10.10.48.194”, port 5432&lt;/p&gt;

    &lt;p&gt;编辑 pg_hba.conf文件&lt;/p&gt;

    &lt;p&gt;把报错中的host 拷贝到这个文件中：如下编写&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi /etc/postgresql/12/main/pg_hba.conf
   
host all all 172.17.0.4/24 md5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把 安装postgresql 设置好的password 填入即可 这个界面还蛮好看的&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/202202/WechatIMG31.png&quot; alt=&quot;set server list code&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Tue, 01 Mar 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/03/postgresql</link>
				<guid isPermaLink="true">http://localhost:4000/2022/03/postgresql</guid>
			</item>
		
			<item>
				<title>grafana</title>
				<description>&lt;h1 id=&quot;grafana&quot;&gt;grafana&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/grafana/grafana/&quot;&gt;https://github.com/grafana/grafana/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一个开源的系统监控软件，尤其是GPU和slurm的监控&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/grafana/grafana/issues/45710&quot;&gt;https://github.com/grafana/grafana/issues/45710&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;看起来纵坐标和tooltip上的数值不太一样&lt;/p&gt;

&lt;p&gt;图表的配置在 /var/lib/grafana/dashboards/gpu-dashboard.json&lt;/p&gt;

&lt;p&gt;grep  GPU Power Usage&lt;/p&gt;

&lt;p&gt;stack 改成 false&lt;/p&gt;

&lt;p&gt;重启  grafana 。&lt;/p&gt;

&lt;p&gt;root        3180  0.0  0.0 2380228 59904 ?       Ssl  Feb16   1:54 /usr/bin/docker run –rm –network host –name docker.grafana.service -v /etc/grafana:/etc/grafana -v /var/lib/grafana:/var/lib/grafana grafana/grafana
472         3925  0.1  0.0 796740 70028 ?        Ssl  Feb16  15:57 grafana-server –homepath=/usr/share/grafana –config=/etc/grafana/grafana.ini –packaging=docker cfg:default.log.mode=console cfg:default.paths.data=/var/lib/grafana cfg:default.paths.logs=/var/log/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins&lt;/p&gt;
</description>
				<pubDate>Fri, 25 Feb 2022 13:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/02/grafana</link>
				<guid isPermaLink="true">http://localhost:4000/2022/02/grafana</guid>
			</item>
		
			<item>
				<title>ssh</title>
				<description>&lt;h1 id=&quot;ssh-无密码访问&quot;&gt;ssh 无密码访问&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;apt-get install openssh-server&lt;/li&gt;
  &lt;li&gt;查看状态 service ssh status&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启动ssh : systemctl start ssh  (关闭 systemctl stop ssh)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;将源server的 id_rsa.pub的内容拷贝到 ~/.ssh/authorized_keys文件夹中, authorized_keys 记得chmod 600&lt;/li&gt;
  &lt;li&gt;如果还是不行，再查看/etc/ssh/sshd_config文件中设置有StrictModes yes ,显式设置成 no&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;别名&lt;/p&gt;

&lt;p&gt;编辑 ~/.ssh/config&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host ksyun_stg
  HostName 120.92.232.118
  Port 10022
  User dingsongyun
  IdentityFile ~/.ssh/id_rsa

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Thu, 24 Feb 2022 10:05:06 +0800</pubDate>
				<link>http://localhost:4000/2022/02/ssh</link>
				<guid isPermaLink="true">http://localhost:4000/2022/02/ssh</guid>
			</item>
		
	</channel>
</rss>
