<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mouse的博客</title>
		<description>记录学习生活工作的点滴</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>job</title>
				<description>&lt;h1 id=&quot;任务调度系统比对&quot;&gt;任务调度系统比对&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;开源框架&lt;/th&gt;
      &lt;th&gt;开发语言&lt;/th&gt;
      &lt;th&gt;任务类型&lt;/th&gt;
      &lt;th&gt;⼯作流&lt;/th&gt;
      &lt;th&gt;能否区分用户&lt;/th&gt;
      &lt;th&gt;可视化&lt;/th&gt;
      &lt;th&gt;API&lt;/th&gt;
      &lt;th&gt;⾼可⽤&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Airflow&lt;/td&gt;
      &lt;td&gt;python&lt;/td&gt;
      &lt;td&gt;通过operator⾃定义，⼤数据组件及Shell，不⽀持Java&lt;/td&gt;
      &lt;td&gt;DAG&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;不⽀持&lt;/td&gt;
      &lt;td&gt;主从&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XXL-JOB&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;Java/Shell/Python/PHP&lt;/td&gt;
      &lt;td&gt;不⽀持&lt;/td&gt;
      &lt;td&gt;不能, 需要做些改造Runtime.getRuntime().exec()&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;主从&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DolphinScheduler&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;⼤数据组件及Shell等近20种&lt;/td&gt;
      &lt;td&gt;DAG&lt;/td&gt;
      &lt;td&gt;能，因为内部实现是 sudo -u username&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;去中⼼&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Quartz&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;不⽀持&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
				<pubDate>Tue, 26 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%B3%BB%E7%BB%9F%E6%AF%94%E5%AF%B9</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%B3%BB%E7%BB%9F%E6%AF%94%E5%AF%B9</guid>
			</item>
		
			<item>
				<title>xxl-job</title>
				<description>&lt;h1 id=&quot;xxl-job&quot;&gt;Xxl-job&lt;/h1&gt;

&lt;p&gt;github : &lt;a href=&quot;https://github.com/xuxueli/xxl-job&quot;&gt;https://github.com/xuxueli/xxl-job&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;quick start: &lt;a href=&quot;https://www.xuxueli.com/xxl-job/#1.1%20%E6%A6%82%E8%BF%B0&quot;&gt;https://www.xuxueli.com/xxl-job/#1.1%20%E6%A6%82%E8%BF%B0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在 ScriptJobHandler 中&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG122.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ScriptUtil ，在worker的服务器上执行命令&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG123.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 25 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/xxl-job</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/xxl-job</guid>
			</item>
		
			<item>
				<title>dolphinscheduler</title>
				<description>&lt;h1 id=&quot;dolphinscheduler&quot;&gt;Dolphinscheduler&lt;/h1&gt;

&lt;p&gt;因为想学习下 如何绑定web用户 和 linux用户&lt;/p&gt;

&lt;p&gt;我们可以学习下业内主流任务调度开源系统  &lt;a href=&quot;https://github.com/apache/dolphinscheduler&quot;&gt;https://github.com/apache/dolphinscheduler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/start/quick-start.html&quot;&gt;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/start/quick-start.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/task/shell.html&quot;&gt;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/task/shell.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;”worker 执行该任务的时候，会生成一个临时shell脚本， 并使用与租户同名的 linux 用户执行这个脚本。“&lt;/p&gt;

&lt;p&gt;“如果Worker所在节点没有这个用户，Worker会在执行任务时创建这个用户。”&lt;/p&gt;

&lt;p&gt;按照这个说法，Dolphinscheduler权限很大，都可以创建用户了。&lt;/p&gt;

&lt;p&gt;https://dolphinscheduler.apache.org/zh-cn/docs/1.3.1/user_doc/cluster-deployment.html&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;因为是以 sudo -u {linux-user} 切换不同linux用户的方式来实现多租户运行作业，所以部署用户需要有 sudo 权限，而且是免密的。&lt;/li&gt;
&lt;/ul&gt;

&lt;font color=&quot;red&quot;&gt;所以没有黑科技，要么就是有root权限，要么用user 账号密码登录worker服务器&lt;/font&gt;

&lt;p&gt;在这个循环中，从queue里不停的获取task， 并交给taskExecuteThread去run&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG120.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG119.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TaskExecuteThread.run
TaskExecuteThread.task.handle()
ShellTask.handle()
AbstractCommandExecutor.run
AbstractCommandExecutor.buildProcess 在这里面会切换用户执行cmd sudo -s username cmd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FAQ :  &lt;a href=&quot;https://github.com/apache/dolphinscheduler/blob/dev/docs/docs/zh/faq.md&quot;&gt;https://github.com/apache/dolphinscheduler/blob/dev/docs/docs/zh/faq.md&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 25 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/dolphinscheduler</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/dolphinscheduler</guid>
			</item>
		
			<item>
				<title>minio_python</title>
				<description>&lt;h1 id=&quot;minio-python&quot;&gt;MinIO-python&lt;/h1&gt;

&lt;p&gt;python client : &lt;a href=&quot;http://docs.minio.org.cn/docs/master/python-client-api-reference&quot;&gt;http://docs.minio.org.cn/docs/master/python-client-api-reference&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sun, 24 Apr 2022 14:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/MinIO_python</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/MinIO_python</guid>
			</item>
		
			<item>
				<title>user</title>
				<description>&lt;h1 id=&quot;python-user&quot;&gt;python-User&lt;/h1&gt;

&lt;p&gt;获取当前用户&lt;/p&gt;

&lt;p&gt;参考文章: &lt;a href=&quot;https://www.geeksforgeeks.org/how-to-get-the-current-username-in-python/&quot;&gt;https://www.geeksforgeeks.org/how-to-get-the-current-username-in-python/&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sun, 24 Apr 2022 12:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/python_user</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/python_user</guid>
			</item>
		
			<item>
				<title>conda</title>
				<description>&lt;h1 id=&quot;conda&quot;&gt;Conda&lt;/h1&gt;

&lt;p&gt;是个python虚拟环境&lt;/p&gt;

&lt;p&gt;参考文章: &lt;a href=&quot;https://blog.csdn.net/coder_oldgeek/article/details/122239755&quot;&gt;https://blog.csdn.net/coder_oldgeek/article/details/122239755&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/64100305&quot;&gt;https://zhuanlan.zhihu.com/p/64100305&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;常用命令：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;conda create --name ancillary python=3.7

conda env list

conda activate ancillary
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Sat, 23 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/conda</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/conda</guid>
			</item>
		
			<item>
				<title>minio_policy</title>
				<description>&lt;h1 id=&quot;minio-policy&quot;&gt;MinIO-policy&lt;/h1&gt;

&lt;p&gt;权限控制&lt;/p&gt;

&lt;h3 id=&quot;有时候场景是-只针对某个账号有权限read-先将bucket设置成privacy-再将这个账号的policy设置成-readonly&quot;&gt;有时候场景是 只针对某个账号有权限read， 先将bucket设置成privacy, 再将这个账号的policy设置成 readonly&lt;/h3&gt;

&lt;p&gt;policy设置如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG118.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;S3 action: &lt;a href=&quot;https://iam.cloudonaut.io/reference/s3.html&quot;&gt;https://iam.cloudonaut.io/reference/s3.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;如何获取物理存储地址&quot;&gt;如何获取物理存储地址？&lt;/h3&gt;
&lt;p&gt;不可能！ 因为MinIO是将一个文件拆开存放到多个物理磁盘上，不是直接放到某个磁盘。&lt;/p&gt;

&lt;h3 id=&quot;为什么minio可以保证一半节点不可用的时候服务依然可用&quot;&gt;为什么MinIO可以保证一半节点不可用的时候，服务依然可用？&lt;/h3&gt;
&lt;p&gt;参考文章：&lt;a href=&quot;https://www.cnblogs.com/FLY_DREAM/p/14587022.html&quot;&gt;https://www.cnblogs.com/FLY_DREAM/p/14587022.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/sinat_27186785/article/details/52034588&quot;&gt;https://blog.csdn.net/sinat_27186785/article/details/52034588&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;纠删码&lt;/p&gt;

&lt;p&gt;纠删码是一种恢复丢失和损坏数据的数学算法，目前，纠删码技术在分布式存储系统中的应用主要有三类，阵列纠删码（Array Code: RAID5、RAID6 等）、RS(Reed-Solomon)里德-所罗门类纠删码和 LDPC(LowDensity Parity Check Code)低密度奇偶校验纠删码。Erasure Code 是一种编码技术，它可以将 n 份原始数据，增加 m 份数据，并能通过 n+m 份中的任意 n 份数据，还原为原始数据。即如果有任意小于等于 m 份的数据失效，仍然能通过剩下的数据还原出来&lt;/p&gt;

</description>
				<pubDate>Fri, 22 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/MinIO_policy</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/MinIO_policy</guid>
			</item>
		
			<item>
				<title>matomo</title>
				<description>&lt;h1 id=&quot;matomo-archive&quot;&gt;Matomo archive&lt;/h1&gt;

&lt;p&gt;研究下这个档案缓存 900s是如何生效的&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG114.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;namespace Piwik\Plugins\Actions; API.getDownloads&lt;/p&gt;

&lt;p&gt;这里根据archive返回数据
&lt;img src=&quot;/images/202204/WechatIMG113.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;$minDatetimeArchiveProcessedUTC 就是当前时间减去 900s.
&lt;br /&gt;
ArchiveSelector 中判断archive的时间和  ​$minDatetimeArchiveProcessedUTC 哪个更早，如果archive 的时间更早，则这个archive就失效。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG112.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果archive失效 ，则新增
&lt;img src=&quot;/images/202204/WechatIMG116.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;matomo_archive_blob_2022_04 中的就是对应的二进制缓存
&lt;img src=&quot;/images/202204/WechatIMG117.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
</description>
				<pubDate>Thu, 21 Apr 2022 17:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/matomo_archive</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/matomo_archive</guid>
			</item>
		
			<item>
				<title>xdebug</title>
				<description>&lt;h1 id=&quot;xdebug&quot;&gt;Xdebug&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://xdebug.org/&quot;&gt;http://xdebug.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为最近想看看matomo 源码，里面php的调用比较深，直接看代码不是很直观，所以需要有个工具debug&lt;/p&gt;

&lt;p&gt;参考文章： &lt;a href=&quot;https://cloud.tencent.com/developer/article/1591505&quot;&gt;https://cloud.tencent.com/developer/article/1591505&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.yisu.com/zixun/376908.html&quot;&gt;https://www.yisu.com/zixun/376908.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;容器内部操作&quot;&gt;容器内部操作&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;在容器内部安装xdebug&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pecl install xdebug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;修改php.ini&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20200930/xdebug.so
   
   
#xdebug.remote_enable=1
#xdebug.remote_host=192.168.1.2
#xdebug.remote_port=9000
#xdebug.idekey=PHPSTORM
   
   
xdebug.mode=debug
xdebug.client_host=192.168.1.2
xdebug.client_port=9000
xdebug.collect_return=On
xdebug.idekey=&quot;PHPSTORM&quot;
xdebug.log=&quot;/tmp/xdebug.log&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;重启docker 让php配置生效&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;phpstorm-的配置-操作&quot;&gt;Phpstorm 的配置 操作&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;选择你的php interpreter (这步好像不需要)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG107.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG108.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG109.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;配置xdebug port&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG110.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置 DBGp Proxy （这步好像也不需要)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG104.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置server  注意右边的是容器内的路径&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG2424.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;调试&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;按照如下步骤&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG105.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击validate&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG2417.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;配置好path和url&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG2419.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击Validate ，看到xdebug安装好了就行了，如果有异常再针对解决&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG2421.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;chrome-插件安装&quot;&gt;chrome 插件安装&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/help/phpstorm/2021.2/browser-debugging-extensions.html?utm_source=product&amp;amp;utm_medium=link&amp;amp;utm_campaign=PS&amp;amp;utm_content=2021.2&quot;&gt;https://www.jetbrains.com/help/phpstorm/2021.2/browser-debugging-extensions.html?utm_source=product&amp;amp;utm_medium=link&amp;amp;utm_campaign=PS&amp;amp;utm_content=2021.2&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;加断点试试成功&quot;&gt;加断点试试,成功!&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG2427.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;以下不用看&quot;&gt;以下不用看&lt;/h3&gt;

&lt;p&gt;安装步骤 : &lt;a href=&quot;http://xdebug.org/wizard&quot;&gt;http://xdebug.org/wizard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为我是用docker启动的matomo，所以需要进到docker容器中安装xdebug&lt;/p&gt;

&lt;p&gt;问题1： 直接卡在第二步，apt-get install php-dev 找不到package&lt;/p&gt;

&lt;p&gt;推测是source 不对， 疯狂找源.&lt;/p&gt;

&lt;p&gt;看报错应该是 php-dev这个包过期了&lt;/p&gt;

</description>
				<pubDate>Thu, 21 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/xdebug</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/xdebug</guid>
			</item>
		
			<item>
				<title>email</title>
				<description>&lt;h1 id=&quot;java-发送email&quot;&gt;java 发送email&lt;/h1&gt;

&lt;p&gt;参考文章:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/java/java-sending-email.html&quot;&gt;https://www.runoob.com/java/java-sending-email.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!-- https://mvnrepository.com/artifact/javax.mail/mail --&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;javax.mail&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;mail&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.4.7&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // 设置邮件服务器
        properties.setProperty(&quot;mail.smtp.host&quot;, &quot;your.mail.server&quot;)
        properties.setProperty(&quot;mail.smtp.port&quot;, &quot;your.port&quot;)
        properties.setProperty(&quot;mail.smtp.auth&quot;, &quot;true&quot;)
        // 获取默认session对象
        val session = Session.getInstance(properties, object: Authenticator() {
            override fun getPasswordAuthentication(): PasswordAuthentication {
                return PasswordAuthentication(&quot;username&quot;, &quot;password&quot;)
            }
        })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Thu, 21 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/email</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/email</guid>
			</item>
		
	</channel>
</rss>
