<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Mouse的博客</title>
		<description>记录学习生活工作的点滴</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Seata</title>
				<description>&lt;p&gt;layout: post
title: “seata”
date: 2022-05-06 10:25:06 +0800
comments: true
category: java
tag: [java]&lt;/p&gt;

&lt;h1 id=&quot;seata-分布式事务&quot;&gt;SEATA 分布式事务&lt;/h1&gt;

&lt;p&gt;官网： &lt;a href=&quot;https://seata.io/zh-cn/docs/overview/what-is-seata.html&quot;&gt;https://seata.io/zh-cn/docs/overview/what-is-seata.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;跨服务调用场景下的事务传播，本质上就是要把 XID 通过服务调用传递到服务提供方，并绑定到 RootContext 中去。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
				<pubDate>Fri, 06 May 2022 00:00:00 +0800</pubDate>
				<link>http://localhost:4000/2022/05/seata</link>
				<guid isPermaLink="true">http://localhost:4000/2022/05/seata</guid>
			</item>
		
			<item>
				<title>Lock</title>
				<description>&lt;p&gt;layout: post
title: “lock”
date: 2022-05-06 10:25:06 +0800
comments: true
category: java
tag: [java]&lt;/p&gt;

&lt;h1 id=&quot;lock&quot;&gt;Lock&lt;/h1&gt;

&lt;p&gt;参考文章: &lt;a href=&quot;https://blog.csdn.net/pmc0_0/article/details/121061692&quot;&gt;https://blog.csdn.net/pmc0_0/article/details/121061692&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202205/912e39d231b1440aa72b1529c61e7cf2.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;重量级锁 ：借助操作系统的monitor&lt;/p&gt;

&lt;p&gt;轻量级锁： object 的 mark word保存了 锁在thread 栈上的 lock record的地址&lt;/p&gt;

&lt;p&gt;偏向锁:  在 mark word中 cas记录 当前线程ID&lt;/p&gt;
</description>
				<pubDate>Fri, 06 May 2022 00:00:00 +0800</pubDate>
				<link>http://localhost:4000/2022/05/lock</link>
				<guid isPermaLink="true">http://localhost:4000/2022/05/lock</guid>
			</item>
		
			<item>
				<title>mqtt</title>
				<description>&lt;h1 id=&quot;mqtt&quot;&gt;MQTT&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/yourstars/p/15247707.html&quot;&gt;https://www.cnblogs.com/yourstars/p/15247707.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull emqx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run  --name=mqtt --restart=always -d -p 18083:18083 -p 1883:1883 emqx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认账号：admin
默认密码：public&lt;/p&gt;

&lt;p&gt;QOS:&lt;/p&gt;

&lt;p&gt;参考文章: &lt;a href=&quot;https://www.csdn.net/tags/MtjaYg5sMTU0NTgtYmxvZwO0O0OO0O0O.html&quot;&gt;https://www.csdn.net/tags/MtjaYg5sMTU0NTgtYmxvZwO0O0OO0O0O.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​	&lt;a href=&quot;https://blog.csdn.net/qq_24505127/article/details/101701011&quot;&gt;https://blog.csdn.net/qq_24505127/article/details/101701011&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​	&lt;a href=&quot;https://blog.csdn.net/m0_50668851/article/details/112555171&quot;&gt;https://blog.csdn.net/m0_50668851/article/details/112555171&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原理 :&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;QOS&lt;/th&gt;
      &lt;th&gt;SAVE MESSAGE&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;broker&lt;/td&gt;
      &lt;td&gt;at most once&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;publisher  broker&lt;/td&gt;
      &lt;td&gt;at least once&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;publisher broker subscriber&lt;/td&gt;
      &lt;td&gt;exactly once&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;will : 可以自定义遗嘱，在messageArrived中根据payload来确认producer是否掉线&lt;/p&gt;

&lt;p&gt;那么如何知道消费端是否掉线呢？ connectionLost 方法&lt;/p&gt;

&lt;p&gt;延迟消息： &lt;a href=&quot;https://www.emqx.io/docs/en/v4.3/advanced/delay-publish.html&quot;&gt;https://www.emqx.io/docs/en/v4.3/advanced/delay-publish.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;特定的topic格式：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$delayed/{DelayInterval}/{TopicName}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$delayed/15/x/y: Publish MQTT message to the topic x/y after 15 seconds
$delayed/60/a/b: Publish MQTT message to the topic a/b after 1 minute
$delayed/3600/$SYS/topic: Publish MQTT message to the topic $SYS/topic after 1 hour
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;java代码： &lt;a href=&quot;https://github.com/gongchangyou/mqtt&quot;&gt;https://github.com/gongchangyou/mqtt&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 05 May 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/05/MQTT</link>
				<guid isPermaLink="true">http://localhost:4000/2022/05/MQTT</guid>
			</item>
		
			<item>
				<title>monitor</title>
				<description>&lt;h1 id=&quot;业务监控&quot;&gt;业务监控&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.51cto.com/jackl/2797593&quot;&gt;https://blog.51cto.com/jackl/2797593&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Statsd + Graphite  +  Grafana&lt;/p&gt;

&lt;p&gt;数据收集，上报 ,  展示, 推荐UDP连接&lt;/p&gt;

&lt;p&gt;做的好还可以有报警（手机锁屏推送 + 邮件提醒）&lt;/p&gt;
</description>
				<pubDate>Wed, 04 May 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/05/monitor</link>
				<guid isPermaLink="true">http://localhost:4000/2022/05/monitor</guid>
			</item>
		
			<item>
				<title>redis</title>
				<description>&lt;h1 id=&quot;docker-redis&quot;&gt;Docker redis&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.runoob.com/docker/docker-install-redis.html&quot;&gt;https://www.runoob.com/docker/docker-install-redis.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;lpush lpop 栈&lt;/p&gt;

&lt;p&gt;lpush rpop 队列&lt;/p&gt;

&lt;p&gt;lpush brpop 消息队列 （可以设置timeout. 并阻塞)&lt;/p&gt;
</description>
				<pubDate>Mon, 02 May 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/05/redis</link>
				<guid isPermaLink="true">http://localhost:4000/2022/05/redis</guid>
			</item>
		
			<item>
				<title>job</title>
				<description>&lt;h1 id=&quot;任务调度系统比对&quot;&gt;任务调度系统比对&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;开源框架&lt;/th&gt;
      &lt;th&gt;开发语言&lt;/th&gt;
      &lt;th&gt;任务类型&lt;/th&gt;
      &lt;th&gt;⼯作流&lt;/th&gt;
      &lt;th&gt;能否区分用户&lt;/th&gt;
      &lt;th&gt;可视化&lt;/th&gt;
      &lt;th&gt;API&lt;/th&gt;
      &lt;th&gt;⾼可⽤&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Airflow&lt;/td&gt;
      &lt;td&gt;python&lt;/td&gt;
      &lt;td&gt;通过operator⾃定义，⼤数据组件及Shell，不⽀持Java&lt;/td&gt;
      &lt;td&gt;DAG&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;不⽀持&lt;/td&gt;
      &lt;td&gt;主从&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XXL-JOB&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;Java/Shell/Python/PHP&lt;/td&gt;
      &lt;td&gt;不⽀持&lt;/td&gt;
      &lt;td&gt;不能, 需要做些改造Runtime.getRuntime().exec()&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;主从&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DolphinScheduler&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;⼤数据组件及Shell等近20种&lt;/td&gt;
      &lt;td&gt;DAG&lt;/td&gt;
      &lt;td&gt;能，因为内部实现是 sudo -u username&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;⽀持&lt;/td&gt;
      &lt;td&gt;去中⼼&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Quartz&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;Java&lt;/td&gt;
      &lt;td&gt;不⽀持&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
				<pubDate>Tue, 26 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%B3%BB%E7%BB%9F%E6%AF%94%E5%AF%B9</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%B3%BB%E7%BB%9F%E6%AF%94%E5%AF%B9</guid>
			</item>
		
			<item>
				<title>xxl-job</title>
				<description>&lt;h1 id=&quot;xxl-job&quot;&gt;Xxl-job&lt;/h1&gt;

&lt;p&gt;github : &lt;a href=&quot;https://github.com/xuxueli/xxl-job&quot;&gt;https://github.com/xuxueli/xxl-job&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;quick start: &lt;a href=&quot;https://www.xuxueli.com/xxl-job/#1.1%20%E6%A6%82%E8%BF%B0&quot;&gt;https://www.xuxueli.com/xxl-job/#1.1%20%E6%A6%82%E8%BF%B0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在 ScriptJobHandler 中&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG122.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ScriptUtil ，在worker的服务器上执行命令&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG123.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Mon, 25 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/xxl-job</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/xxl-job</guid>
			</item>
		
			<item>
				<title>dolphinscheduler</title>
				<description>&lt;h1 id=&quot;dolphinscheduler&quot;&gt;Dolphinscheduler&lt;/h1&gt;

&lt;p&gt;因为想学习下 如何绑定web用户 和 linux用户&lt;/p&gt;

&lt;p&gt;我们可以学习下业内主流任务调度开源系统  &lt;a href=&quot;https://github.com/apache/dolphinscheduler&quot;&gt;https://github.com/apache/dolphinscheduler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/start/quick-start.html&quot;&gt;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/start/quick-start.html&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull dolphinscheduler.docker.scarf.sh/apache/dolphinscheduler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/task/shell.html&quot;&gt;https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/task/shell.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;”worker 执行该任务的时候，会生成一个临时shell脚本， 并使用与租户同名的 linux 用户执行这个脚本。“&lt;/p&gt;

&lt;p&gt;“如果Worker所在节点没有这个用户，Worker会在执行任务时创建这个用户。”&lt;/p&gt;

&lt;p&gt;按照这个说法，Dolphinscheduler权限很大，都可以创建用户了。&lt;/p&gt;

&lt;p&gt;https://dolphinscheduler.apache.org/zh-cn/docs/1.3.1/user_doc/cluster-deployment.html&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;因为是以 sudo -u {linux-user} 切换不同linux用户的方式来实现多租户运行作业，所以部署用户需要有 sudo 权限，而且是免密的。&lt;/li&gt;
&lt;/ul&gt;

&lt;font color=&quot;red&quot;&gt;所以没有黑科技，要么就是有root权限，要么用user 账号密码登录worker服务器&lt;/font&gt;

&lt;p&gt;在这个循环中，从queue里不停的获取task， 并交给taskExecuteThread去run&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG120.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/202204/WechatIMG119.png&quot; alt=&quot;&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TaskExecuteThread.run
TaskExecuteThread.task.handle()
ShellTask.handle()
AbstractCommandExecutor.run
AbstractCommandExecutor.buildProcess 在这里面会切换用户执行cmd sudo -s username cmd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FAQ :  &lt;a href=&quot;https://github.com/apache/dolphinscheduler/blob/dev/docs/docs/zh/faq.md&quot;&gt;https://github.com/apache/dolphinscheduler/blob/dev/docs/docs/zh/faq.md&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 25 Apr 2022 10:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/dolphinscheduler</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/dolphinscheduler</guid>
			</item>
		
			<item>
				<title>minio_python</title>
				<description>&lt;h1 id=&quot;minio-python&quot;&gt;MinIO-python&lt;/h1&gt;

&lt;p&gt;python client : &lt;a href=&quot;http://docs.minio.org.cn/docs/master/python-client-api-reference&quot;&gt;http://docs.minio.org.cn/docs/master/python-client-api-reference&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sun, 24 Apr 2022 14:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/MinIO_python</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/MinIO_python</guid>
			</item>
		
			<item>
				<title>user</title>
				<description>&lt;h1 id=&quot;python-user&quot;&gt;python-User&lt;/h1&gt;

&lt;p&gt;获取当前用户&lt;/p&gt;

&lt;p&gt;参考文章: &lt;a href=&quot;https://www.geeksforgeeks.org/how-to-get-the-current-username-in-python/&quot;&gt;https://www.geeksforgeeks.org/how-to-get-the-current-username-in-python/&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sun, 24 Apr 2022 12:25:06 +0800</pubDate>
				<link>http://localhost:4000/2022/04/python_user</link>
				<guid isPermaLink="true">http://localhost:4000/2022/04/python_user</guid>
			</item>
		
	</channel>
</rss>
